export const JsJson =[
  {
    "title": "JavaScript的组成",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">JavaScript的组成</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">JavaScript 由以下三部分组成：</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">i.</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">ECMAScript（核心）：JavaScript 语言基础</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">ii.</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">DOM（文档对象模型）：规定了访问HTML和XML的接口</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">iii.</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">BOM（浏览器对象模型）：提供了浏览器窗口之间进行交互的对象和方法</span></p>"
  },
  {
    "title": "介绍JavaScript的原型，原型链？有什么特点？",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">介绍JavaScript的原型，原型链？有什么特点？</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">原型：</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">&nbsp; &nbsp;o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">JavaScript的所有对象中都包含了一个 [</span><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">proto</span></strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">] 内部属性，这个属性所对应的就是该对象的原型</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">&nbsp; &nbsp;o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">JavaScript的函数对象，除了原型 [</span><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">proto</span></strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">] 之外，还预置了 prototype 属性</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">&nbsp; &nbsp;o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">当函数对象作为构造函数创建实例时，该 prototype 属性值将被作为实例对象的原型 [</span><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">proto</span></strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">]。</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">原型链：</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">&nbsp; &nbsp;o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">当一个对象调用的属性/方法自身不存在时，就会去自己 [</span><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">proto</span></strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">] 关联的前辈 prototype 对象上去找</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">&nbsp; &nbsp;o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">如果没找到，就会去该 prototype 原型 [</span><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">proto</span></strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">] 关联的前辈 prototype 去找。依次类推，直到找到属性/方法或 undefined 为止。从而形成了所谓的&ldquo;原型链&rdquo;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">原型特点：</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">&nbsp; &nbsp;o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">JavaScript对象是通过引用来传递的，当修改原型时，与之相关的对象也会继承这一改变</span></p>"
  },
  {
    "title": "JS的基本数据类型和引用数据类型",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">JS的基本数据类型和引用数据类型</span></strong></p><p style=\"margin-top:5.0000pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">基本数据类型：undefined、null、boolean、number、string、symbol</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">引用数据类型：object、array、function</span></p>"
  },
  {
    "title": "检测浏览器版本版本有哪些方式？",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">检测浏览器版本版本有哪些方式？</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">根据 navigator.userAgent // UA.toLowerCase().indexOf(&#39;chrome&#39;)</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">根据 window 对象的成员 // &#39;ActiveXObject&#39; in window</span></p>"
  },
  {
    "title": "介绍JS有哪些内置对象？",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">介绍JS有哪些内置对象？</span></strong></p><p style=\"margin-top:5.0000pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">数据封装类对象：Object、Array、Boolean、Number、String</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">其他对象：Function、Arguments、Math、Date、RegExp、Error</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">ES6新增对象：Symbol、Map、Set、Promises、Proxy、Reflect</span></p>"
  },
  {
    "title": "说几条写JavaScript的基本规范？",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">说几条写JavaScript的基本规范？</span></strong></p><p style=\"margin-top:5.0000pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">代码缩进，建议使用&ldquo;四个空格&rdquo;缩进</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">代码段使用花括号{}包裹</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">语句结束使用分号;</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">变量和函数在使用前进行声明</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">以大写字母开头命名构造函数，全大写命名常量</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">规范定义JSON对象，补全双引号</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">用{}和[]声明对象和数组</span></p>"
  },
  {
    "title": "如何编写高性能的JavaScript？",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">如何编写高性能的JavaScript？</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">遵循严格模式：&quot;use strict&quot;;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">将js脚本放在页面底部，加快渲染页面</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">将js脚本将脚本成组打包，减少请求</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">使用非阻塞方式下载js脚本</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">尽量使用局部变量来保存全局变量</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">尽量减少使用闭包</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">使用 window 对象属性方法时，省略 window</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">尽量减少对象成员嵌套</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">缓存 DOM 节点的访问</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">通过避免使用 eval() 和 Function() 构造器</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">给 setTimeout() 和 setInterval() 传递函数而是字符串作为参数</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">尽量使用直接量创建对象和数组</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">最小化重绘(repaint)和回流(reflow)</span></p>"
  },
  {
    "title": "描述浏览器的渲染过程，DOM树和渲染树的区别？",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">描述浏览器的渲染过程，DOM树和渲染树的区别？</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&nbsp;&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">浏览器的渲染过程：</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">解析HTML构建 DOM(DOM树)，并行请求 css/image/js</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">CSS 文件下载完成，开始构建 CSSOM(CSS树)</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">CSSOM 构建结束后，和 DOM 一起生成 Render Tree(渲染树)</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">布局(Layout)：计算出每个节点在屏幕中的位置</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">显示(Painting)：通过显卡把页面画到屏幕上</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span></span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">DOM树 和 渲染树 的区别：</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">DOM树与HTML标签一一对应，包括head和隐藏元素</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">渲染树不包括head和隐藏元素，大段文本的每一个行都是独立节点，每一个节点都有对应的css属性</span></p>"
  },
  {
    "title": "重绘和回流（重排）的区别和关系？",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">重绘和回流（重排）的区别和关系？</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">重绘：当渲染树中的元素外观（如：颜色）发生改变，不影响布局时，产生重绘</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">回流：当渲染树中的元素的布局（如：尺寸、位置、隐藏/状态状态）发生改变时，产生重绘回流</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">注意：JS获取Layout属性值（如：offsetLeft、scrollTop、getComputedStyle等）也会引起回流。因为浏览器需要通过回流计算最新值</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">回流必将引起重绘，而重绘不一定会引起回流</span></p>"
  },
  {
    "title": "如何最小化重绘(repaint)和回流(reflow)？",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">如何最小化重绘(repaint)和回流(reflow)？</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">需要要对元素进行复杂的操作时，可以先隐藏(display:&quot;none&quot;)，操作完成后再显示</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">需要创建多个DOM节点时，使用DocumentFragment创建完后一次性的加入document</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">缓存Layout属性值，如：var left = elem.offsetLeft; 这样，多次使用 left 只产生一次回流</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">尽量避免用table布局（table元素一旦触发回流就会导致table里所有的其它元素回流）</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">避免使用css表达式(expression)，因为每次调用都会重新计算值（包括加载页面）</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">尽量使用 css 属性简写，如：用 border 代替 border-width, border-style, border-color</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">批量修改元素样式：elem.className 和 elem.style.cssText 代替 elem.style.xxx</span></p>"
  },
  {
    "title": "script 的位置是否会影响首屏显示时间？",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">script 的位置是否会影响首屏显示时间？</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">在解析 HTML 生成 DOM 过程中，js 文件的下载是并行的，不需要 DOM 处理到 script 节点。因此，script的位置不影响首屏显示的开始时间。</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">浏览器解析 HTML 是自上而下的线性过程，script作为 HTML 的一部分同样遵循这个原则</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">因此，script 会延迟 DomContentLoad，只显示其上部分首屏内容，从而影响首屏显示的完成时间</span></p>"
  },
  {
    "title": "解释JavaScript中的作用域与变量声明提升？",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">解释JavaScript中的作用域与变量声明提升？</span></strong></p><p><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">JavaScript作用域：</span></p><p><br></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">在Java、C等语言中，作用域为for语句、if语句或{}内的一块区域，称为作用域；</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">而在 JavaScript 中，作用域为function(){}内的区域，称为函数作用域。</span></p><p><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span>JavaScript变量声明提升：</span></p><p><br></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">在JavaScript中，函数声明与变量声明经常被JavaScript引擎隐式地提升到当前作用域的顶部。</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">声明语句中的赋值部分并不会被提升，只有名称被提升</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">函数声明的优先级高于变量，如果变量名跟函数名相同且未赋值，则函数声明会覆盖变量声明</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">如果函数有多个同名参数，那么最后一个参数（即使没有定义）会覆盖前面的同名参数</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\"><span style=\"font-family:Symbol;font-size:13px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:72.0000pt;text-indent:-18.0000pt;\"><br></p>"
  },
  {
    "title": "JavaScript有几种类型的值？，你能画一下他们的内存图吗",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">JavaScript有几种类型的值？，你能画一下他们的内存图吗</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">原始数据类型（Undefined，Null，Boolean，Number、String）-- 栈</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">引用数据类型（对象、数组和函数）-- 堆</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">两种类型的区别是：存储位置不同：</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">原始数据类型是直接存储在栈(stack)中的简单数据段，占据空间小、大小固定，属于被频繁使用数据；</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">引用数据类型存储在堆(heap)中的对象，占据空间大、大小不固定，如果存储在栈中，将会影响程序运行的性能；</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">引用数据类型在栈中存储了指针，该指针指向堆中该实体的起始地址。</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">当解释器寻找引用值时，会首先检索其在栈中的地址，取得地址后从堆中获得实体。</span></p>"
  },
  {
    "title": "JavaScript如何实现一个类，怎么实例化这个类？",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">JavaScript如何实现一个类，怎么实例化这个类？</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">构造函数法（this + prototype） -- 用 new 关键字 生成实例对象</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">缺点：用到了 this 和 prototype，编写复杂，可读性差</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">function</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">Mobile</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(name, price){</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp;this</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">name</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;name;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp;this</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.price&nbsp;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;price;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp;}</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp;Mobile.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">prototype</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">sell</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">function</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(){</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp;alert</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">this</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">name</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">+</span><span style=\"font-family:Consolas;color:rgb(3,47,98);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&quot;，售价 $&quot;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">+</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">this</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.price);</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp;}</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">var</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;iPhone7&nbsp;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">new</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">Mobile</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(</span><span style=\"font-family:Consolas;color:rgb(3,47,98);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&quot;iPhone7&quot;</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">,&nbsp;</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">1000</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">);</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp;iPhone7.</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">sell</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">();</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">Object.create 法 -- 用 Object.create() 生成实例对象</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">缺点：不能实现私有属性和私有方法，实例对象之间也不能共享数据</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">var</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;Person&nbsp;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;{</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp;firstname</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">:</span><span style=\"font-family:Consolas;color:rgb(3,47,98);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&quot;Mark&quot;</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">,</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp;lastname</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">:</span><span style=\"font-family:Consolas;color:rgb(3,47,98);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&quot;Yun&quot;</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">,</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp;age</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">:</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">25</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">,</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">introduce</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">:</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">function</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(){</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">alert</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(</span><span style=\"font-family:Consolas;color:rgb(3,47,98);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&#39;I am &#39;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">+</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;Person.firstname&nbsp;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">+</span><span style=\"font-family:Consolas;color:rgb(3,47,98);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&#39; &#39;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">+</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;Person.lastname);</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp;}</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;};</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><br></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">var</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;person&nbsp;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">Object</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">create</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(Person);</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;person.</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">introduce</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">();</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><br></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(106,115,125);font-style:normal;font-size:13px;background:rgb(246,248,250);\">// Object.create 要求 IE9+，低版本浏览器可以自行部署：</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">if</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;(</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">!</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">Object</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.create) {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">　 &nbsp;&nbsp;</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">Object</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">create</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">function</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;(o) {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">　　　&nbsp;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">function</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">F</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">() {}</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">　　　&nbsp;</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">F</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">prototype</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;o;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">　　　&nbsp;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">return</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">new</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">F</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">();</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">　　};</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">　}</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">极简主义法（消除 this 和 prototype） -- 调用 createNew() 得到实例对象</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">优点：容易理解，结构清晰优雅，符合传统的&quot;面向对象编程&quot;的构造</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">var</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;Cat&nbsp;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;{</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp;age</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">:</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">3</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">,&nbsp;</span><span style=\"font-family:Consolas;color:rgb(106,115,125);font-style:normal;font-size:13px;background:rgb(246,248,250);\">// 共享数据 -- 定义在类对象内，createNew() 外</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">createNew</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">:</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">function</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;() {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">var</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;cat&nbsp;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;{};</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(106,115,125);font-style:normal;font-size:13px;background:rgb(246,248,250);\">// var cat = Animal.createNew(); // 继承 Animal 类</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp;cat.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">name</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(3,47,98);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&quot;小咪&quot;</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">var</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;sound&nbsp;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(3,47,98);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&quot;喵喵喵&quot;</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">;&nbsp;</span><span style=\"font-family:Consolas;color:rgb(106,115,125);font-style:normal;font-size:13px;background:rgb(246,248,250);\">// 私有属性--定义在 createNew() 内，输出对象外</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp;cat.</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">makeSound</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">function</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;() {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">alert</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(sound); &nbsp;</span><span style=\"font-family:Consolas;color:rgb(106,115,125);font-style:normal;font-size:13px;background:rgb(246,248,250);\">// 暴露私有属性</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp;};</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp;cat.</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">changeAge</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">function</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(num){</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp;Cat.age&nbsp;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;num;&nbsp;</span><span style=\"font-family:Consolas;color:rgb(106,115,125);font-style:normal;font-size:13px;background:rgb(246,248,250);\">// 修改共享数据</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp;};</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">return</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;cat;&nbsp;</span><span style=\"font-family:Consolas;color:rgb(106,115,125);font-style:normal;font-size:13px;background:rgb(246,248,250);\">// 输出对象</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp;}</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;};</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><br></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">var</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;cat&nbsp;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;Cat.</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">createNew</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">();</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;cat.</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">makeSound</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">();</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">ES6 语法糖 class -- 用 new 关键字 生成实例对象</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">class</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">Point</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;{</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">constructor</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(x, y) {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">this</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">x</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;x;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">this</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">y</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;y;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp;}</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">toString</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">() {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">return</span><span style=\"font-family:Consolas;color:rgb(3,47,98);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&#39;(&#39;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">+</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">this</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">x</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">+</span><span style=\"font-family:Consolas;color:rgb(3,47,98);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&#39;, &#39;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">+</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">this</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">y</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">+</span><span style=\"font-family:Consolas;color:rgb(3,47,98);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&#39;)&#39;</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp;}</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp;}</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><br></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">var</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;point&nbsp;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">new</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">Point</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">2</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">,&nbsp;</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">3</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">);</span></p>"
  },
  {
    "title": "Javascript如何实现继承？",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">Javascript如何实现继承？</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">构造函数绑定：使用 call 或 apply 方法，将父对象的构造函数绑定在子对象上</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">function</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">Cat</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(name,color){</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">　Animal.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">apply</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">this</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">,&nbsp;</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">arguments</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">);</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">　</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">this</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">name</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;name;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">　</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">this</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">color</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;color;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">}</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">实例继承：将子对象的 prototype 指向父对象的一个实例</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">Cat.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">prototype</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">new</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">Animal</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">();Cat.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">prototype</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">constructor</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;Cat;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">拷贝继承：如果把父对象的所有属性和方法，拷贝进子对象</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">function</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">extend</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(Child, Parent) {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">　　　</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">var</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;p&nbsp;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;Parent.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">prototype</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">　　　</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">var</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;c&nbsp;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;Child.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">prototype</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">　　　</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">for</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;(</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">var</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;i&nbsp;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">in</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;p) {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">　　　 &nbsp; c[i]&nbsp;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;p[i];</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">　　　}</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">　　　c.uber&nbsp;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;p;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">　 }</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">原型继承：将子对象的 prototype 指向父对象的 prototype</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">function</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">extend</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(Child, Parent) {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">var</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">F</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">function</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(){};</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">　</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">F</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">prototype</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;Parent.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">prototype</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">　Child.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">prototype</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">new</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">F</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">();</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">　Child.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">prototype</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">constructor</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;Child;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">　Child.uber&nbsp;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;Parent.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">prototype</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; }</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">ES6 语法糖 extends：class ColorPoint extends Point {}</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">class</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">ColorPoint</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">extends</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">Point</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;{</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">constructor</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(x, y, color) {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">super</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(x, y);&nbsp;</span><span style=\"font-family:Consolas;color:rgb(106,115,125);font-style:normal;font-size:13px;background:rgb(246,248,250);\">// 调用父类的constructor(x, y)</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">this</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">color</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;color;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp;}</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">toString</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">() {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">return</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">this</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">color</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">+</span><span style=\"font-family:Consolas;color:rgb(3,47,98);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&#39; &#39;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">+</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">super</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">toString</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">();&nbsp;</span><span style=\"font-family:Consolas;color:rgb(106,115,125);font-style:normal;font-size:13px;background:rgb(246,248,250);\">// 调用父类的toString()</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp;}</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; }</span></p>"
  },
  {
    "title": "Javascript作用链域?",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">Javascript作用链域?</span></strong></p><p style=\"margin-top:5.0000pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">全局函数无法查看局部函数的内部细节，但局部函数可以查看其上层的函数细节，直至全局细节</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">如果当前作用域没有找到属性或方法，会向上层作用域查找，直至全局函数，这种形式就是作用域链</span></p>"
  },
  {
    "title": "谈谈this对象的理解",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">谈谈this对象的理解</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">this 总是指向函数的直接调用者</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">如果有 new 关键字，this 指向 new 出来的实例对象</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">在事件中，this指向触发这个事件的对象</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">IE下 attachEvent 中的this总是指向全局对象Window</span></p>"
  },
  {
    "title": "eval是做什么的？",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">eval是做什么的？</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">eval的功能是把对应的字符串解析成JS代码并运行</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">应该避免使用eval，不安全，非常耗性能（先解析成js语句，再执行）</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">由JSON字符串转换为JSON对象的时候可以用 eval(&#39;(&#39;+ str +&#39;)&#39;);</span></p>"
  },
  {
    "title": "eval是做什么的？(2)",
    "html": "<p><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">eval是做什么的？</span></strong></p><p style=\"margin-top:5.0000pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">它的功能是把对应的字符串解析成JS代码并运行</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">应该避免使用eval，不安全，非常耗性能（2次，一次解析成js语句，一次执行）</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">由JSON字符串转换为JSON对象的时候可以用eval，var obj =eval(&#39;(&#39;+ str +&#39;)&#39;)</span></p>"
  },
  {
    "title": "什么是 Window 对象? 什么是 Document 对象?",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">什么是 Window 对象? 什么是 Document 对象?</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">Window 对象表示当前浏览器的窗口，是JavaScript的顶级对象。</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">我们创建的所有对象、函数、变量都是 Window 对象的成员。</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">Window 对象的方法和属性是在全局范围内有效的。</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">Document 对象是 HTML 文档的根节点与所有其他节点（元素节点，文本节点，属性节点, 注释节点）</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">Document 对象使我们可以通过脚本对 HTML 页面中的所有元素进行访问</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">Document 对象是 Window 对象的一部分，可通过 window.document 属性对其进行访问</span></p>"
  },
  {
    "title": "介绍 DOM 的发展",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">介绍 DOM 的发展</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">DOM：文档对象模型（Document Object Model），定义了访问HTML和XML文档的标准，与编程语言及平台无关</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">DOM0：提供了查询和操作Web文档的内容API。未形成标准，实现混乱。如：document.forms[&#39;login&#39;]</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">DOM1：W3C提出标准化的DOM，简化了对文档中任意部分的访问和操作。如：JavaScript中的Document对象</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">DOM2：原来DOM基础上扩充了鼠标事件等细分模块，增加了对CSS的支持。如：getComputedStyle(elem, pseudo)</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">DOM3：增加了XPath模块和加载与保存（Load and Save）模块。如：XPathEvaluator</span></p>"
  },
  {
    "title": "介绍DOM0，DOM2，DOM3事件处理方式区别",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">介绍DOM0，DOM2，DOM3事件处理方式区别</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">DOM0级事件处理方式：</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;\">btn.onclick = func;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;\">btn.onclick = null;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">DOM2级事件处理方式：</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;\">btn.addEventListener(&#39;click&#39;, func, false);</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;\">btn.removeEventListener(&#39;click&#39;, func, false);</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;\">btn.attachEvent(&quot;onclick&quot;, func);</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;\">btn.detachEvent(&quot;onclick&quot;, func);</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">DOM3级事件处理方式：</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;\">eventUtil.addListener(input, &quot;textInput&quot;, func);</span></p><p><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;\">eventUtil</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">&nbsp;是自定义对象，</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;\">textInput</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">&nbsp;是DOM3级事件</span></p>"
  },
  {
    "title": "介绍事件“捕获”和“冒泡”执行顺序和事件的执行次数？",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">介绍事件&ldquo;捕获&rdquo;和&ldquo;冒泡&rdquo;执行顺序和事件的执行次数？</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">按照W3C标准的事件：首是进入捕获阶段，直到达到目标元素，再进入冒泡阶段</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">事件执行次数（DOM2-addEventListener）：元素上绑定事件的个数</span></p><p style=\"margin-top: 0pt; margin-bottom: 12pt; margin-left: 20px; text-indent: 0pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">注意1：前提是事件被确实触发</span></p><p style=\"margin-top: 0pt; margin-bottom: 12pt; margin-left: 20px; text-indent: 0pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">注意2：事件绑定几次就算几个事件，即使类型和功能完全一样也不会&ldquo;覆盖&rdquo;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">事件执行顺序：判断的关键是否目标元素</span></p><p style=\"margin-top: 0pt; margin-bottom: 12pt; margin-left: 20px; text-indent: 0pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">非目标元素：根据W3C的标准执行：捕获-&gt;目标元素-&gt;冒泡（不依据事件绑定顺序）</span></p><p style=\"margin-top: 0pt; margin-bottom: 12pt; margin-left: 20px; text-indent: 0pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">目标元素：依据事件绑定顺序：先绑定的事件先执行（不依据捕获冒泡标准）</span></p><p style=\"margin-top: 0pt; margin-bottom: 12pt; margin-left: 20px; text-indent: 0pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">最终顺序：父元素捕获-&gt;目标元素事件1-&gt;目标元素事件2-&gt;子元素捕获-&gt;子元素冒泡-&gt;父元素冒泡</span></p><p><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">注意：子元素事件执行前提 事件确实&ldquo;落&rdquo;到子元素布局区域上，而不是简单的具有嵌套关系</span></p>"
  },
  {
    "title": "在一个DOM上同时绑定两个点击事件：一个用捕获，一个用冒泡。事件会执行几次，先执行冒泡还是捕获？",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">在一个DOM上同时绑定两个点击事件：一个用捕获，一个用冒泡。事件会执行几次，先执行冒泡还是捕获？</span></strong></p><p style=\"margin-top:5.0000pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">该DOM上的事件如果被触发，会执行两次（执行次数等于绑定次数）</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">如果该DOM是目标元素，则按事件绑定顺序执行，不区分冒泡/捕获</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">如果该DOM是处于事件流中的非目标元素，则先执行捕获，后执行冒泡</span></p>"
  },
  {
    "title": "事件的代理/委托",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">事件的代理/委托</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">事件委托是指将事件绑定目标元素的到父元素上，利用冒泡机制触发该事件</span></p><p style=\"margin-top: 0pt; margin-bottom: 12pt; margin-left: 20px; text-indent: 0pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">优点：</span></p><p style=\"margin-top: 0pt; margin-bottom: 12pt; margin-left: 40px; text-indent: 0pt;\"><span style=\"font-family:Wingdings;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&sect;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">可以减少事件注册，节省大量内存占用</span></p><p style=\"margin-top: 2.65pt; margin-bottom: 5pt; margin-left: 64px; text-indent: -18pt;\"><span style=\"font-family:Wingdings;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&sect;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">可以将事件应用于动态添加的子元素上</span></p><p style=\"margin-top: 2.65pt; margin-bottom: 5pt; margin-left: 44px; text-indent: -18pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">缺点： 使用不当会造成事件在不应该触发时触发</span></p><p style=\"margin-top: 2.65pt; margin-bottom: 5pt; margin-left: 44px; text-indent: -18pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">示例：</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">ulEl.addEventListener(&#39;click&#39;, function(e){</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; var target = event.target || event.srcElement;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; if(!!target &amp;&amp; target.nodeName.toUpperCase() === &quot;LI&quot;){</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; console.log(target.innerHTML);</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; }</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">}, false);</span></p>"
  },
  {
    "title": "IE的事件处理和W3C的事件处理有哪些区别？",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">IE的事件处理和W3C的事件处理有哪些区别？</span></strong></p><p style=\"margin-top: 5pt; margin-bottom: 5pt; text-indent: -18pt; margin-left: 20px;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">绑定事件</span></p><p style=\"margin-top: 5pt; margin-bottom: 5pt; margin-left: 36px; text-indent: -18pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">W3C: targetEl.addEventListener(&#39;click&#39;, handler, false);</span></p><p style=\"margin-top: 2.65pt; margin-bottom: 5pt; margin-left: 36px; text-indent: -18pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">IE: targetEl.attachEvent(&#39;onclick&#39;, handler);</span></p><p style=\"margin-top: 2.65pt; margin-bottom: 5pt; margin-left: 16px; text-indent: -18pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">删除事件</span></p><p style=\"margin-top: 2.65pt; margin-bottom: 5pt; margin-left: 36px; text-indent: -18pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">W3C: targetEl.removeEventListener(&#39;click&#39;, handler, false);</span></p><p style=\"margin-top: 2.65pt; margin-bottom: 5pt; margin-left: 36px; text-indent: -18pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">IE: targetEl.detachEvent(event, handler);</span></p><p style=\"margin-top: 2.65pt; margin-bottom: 5pt; margin-left: 16px; text-indent: -18pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">事件对象</span></p><p style=\"margin-top: 2.65pt; margin-bottom: 5pt; margin-left: 36px; text-indent: -18pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">W3C: var e = arguments.callee.caller.arguments[0]</span></p><p style=\"margin-top: 2.65pt; margin-bottom: 5pt; margin-left: 36px; text-indent: -18pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">IE: window.event</span></p><p style=\"margin-top: 2.65pt; margin-bottom: 5pt; margin-left: 16px; text-indent: -18pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">事件目标</span></p><p style=\"margin-top: 2.65pt; margin-bottom: 5pt; margin-left: 36px; text-indent: -18pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">W3C: e.target</span></p><p style=\"margin-top: 2.65pt; margin-bottom: 5pt; margin-left: 36px; text-indent: -18pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">IE: window.event.srcElement</span></p><p style=\"margin-top: 2.65pt; margin-bottom: 5pt; margin-left: 16px; text-indent: -18pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">阻止事件默认行为</span></p><p style=\"margin-top: 2.65pt; margin-bottom: 5pt; margin-left: 36px; text-indent: -18pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">W3C: e.preventDefault()</span></p><p style=\"margin-top: 2.65pt; margin-bottom: 5pt; margin-left: 36px; text-indent: -18pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">IE: window.event.returnValue = false</span></p><p style=\"margin-top: 2.65pt; margin-bottom: 5pt; margin-left: 16px; text-indent: -18pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">阻止事件传播</span></p><p style=\"margin-top: 2.65pt; margin-bottom: 5pt; margin-left: 36px; text-indent: -18pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">W3C: e.stopPropagation()</span></p><p style=\"margin-top: 2.65pt; margin-bottom: 5pt; margin-left: 36px; text-indent: -18pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">IE: window.event.cancelBubble = true</span></p>"
  },
  {
    "title": "如何派发事件(dispatchEvent)？（如何进行事件广播？）",
    "html": "<p style=\"margin-top: 5pt; margin-bottom: 5pt; margin-left: 28px; text-indent: -18pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">W3C: 使用 dispatchEvent 方法</span></p><p style=\"margin-top: 5pt; margin-bottom: 5pt; margin-left: 28px; text-indent: -18pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">IE: 使用 fireEvent 方法</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">var</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">fireEvent</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">function</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(element,&nbsp;</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">event</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">){</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">if</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;(</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">document</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.createEventObject){</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">var</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;mockEvent&nbsp;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">document</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">createEventObject</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">();</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">return</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;element.</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">fireEvent</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(</span><span style=\"font-family:Consolas;color:rgb(3,47,98);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&#39;on&#39;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">+</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">event</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">, mockEvent)</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; }</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">else</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">{</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">var</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;mockEvent&nbsp;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">document</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">createEvent</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(</span><span style=\"font-family:Consolas;color:rgb(3,47,98);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&#39;HTMLEvents&#39;</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">);</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; mockEvent.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">initEvent</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">event</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">,&nbsp;</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">true</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">,&nbsp;</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">true</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">);</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">return</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">!</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">element.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">dispatchEvent</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(mockEvent);</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; }</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">}</span></p>"
  },
  {
    "title": "什么是函数节流？介绍一下应用场景和原理？",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">什么是函数节流？介绍一下应用场景和原理？</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">函数节流(throttle)是指阻止一个函数在很短时间间隔内连续调用。 只有当上一次函数执行后达到规定的时间间隔，才能进行下一次调用。 但要保证一个累计最小调用间隔（否则拖拽类的节流都将无连续效果）</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">函数节流用于 onresize, onscroll 等短时间内会多次触发的事件</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">函数节流的原理：使用定时器做时间节流。 当触发一个事件时，先用 setTimout 让这个事件延迟一小段时间再执行。 如果在这个时间间隔内又触发了事件，就 clearTimeout 原来的定时器， 再 setTimeout 一个新的定时器重复以上流程。</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">函数节流简单实现：</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:72.0000pt;text-indent:-18.0000pt;\"><br></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">function</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">throttle</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(method, context) {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">clearTimeout</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(methor.tId);</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp;method.tId&nbsp;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">setTimeout</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">function</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(){</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;method.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">call</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(context);</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp;}，&nbsp;</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">100</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">);&nbsp;</span><span style=\"font-family:Consolas;color:rgb(106,115,125);font-style:normal;font-size:13px;background:rgb(246,248,250);\">// 两次调用至少间隔 100ms</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">}</span><span style=\"font-family:Consolas;color:rgb(106,115,125);font-style:normal;font-size:13px;background:rgb(246,248,250);\">// 调用</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">window</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">onresize</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">function</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(){</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">throttle</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(myFunc,&nbsp;</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">window</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">);</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">}</span></p>"
  },
  {
    "title": "区分什么是“客户区坐标”、“页面坐标”、“屏幕坐标”？",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">区分什么是&ldquo;客户区坐标&rdquo;、&ldquo;页面坐标&rdquo;、&ldquo;屏幕坐标&rdquo;？</span></strong></p><p style=\"margin-top:5.0000pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">客户区坐标：鼠标指针在可视区中的水平坐标(clientX)和垂直坐标(clientY)</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">页面坐标：鼠标指针在页面布局中的水平坐标(pageX)和垂直坐标(pageY)</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">屏幕坐标：设备物理屏幕的水平坐标(screenX)和垂直坐标(screenY)</span></p>"
  },
  {
    "title": "如何获得一个DOM元素的绝对位置？",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">如何获得一个DOM元素的绝对位置？</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">elem.offsetLeft：返回元素相对于其定位父级左侧的距离</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">elem.offsetTop：返回元素相对于其定位父级顶部的距离</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">elem.getBoundingClientRect()：返回一个DOMRect对象，包含一组描述边框的只读属性，单位像素</span></p>"
  },
  {
    "title": "new 操作符具体干了什么？",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">new 操作符具体干了什么？</span></strong></p><p style=\"margin-top:5.0000pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">创建实例对象，this 变量引用该对象，同时还继承了构造函数的原型</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">属性和方法被加入到 this 引用的对象中</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">新创建的对象由 this 所引用，并且最后隐式的返回 this</span></p>"
  },
  {
    "title": "分析 ['1', '2', '3'].map(parseInt) 答案是多少？",
    "html": "<p><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">分析 [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;].map(parseInt) 答案是多少？</span></strong></p><p style=\"margin-top: 5pt; margin-bottom: 5pt; margin-left: 28px; text-indent: -18pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">答案:[1, NaN, NaN]</span></p><p style=\"margin-top: 5pt; margin-bottom: 5pt; margin-left: 28px; text-indent: -18pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">parseInt(string, radix) 第2个参数 radix 表示进制。省略 radix 或 radix = 0，则数字将以十进制解析</span></p><p style=\"margin-top: 2.65pt; margin-bottom: 5pt; margin-left: 28px; text-indent: -18pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">map 每次为 parseInt 传3个参数(elem, index, array)，其中 index 为数组索引</span></p><p style=\"margin-top: 2.65pt; margin-bottom: 5pt; margin-left: 28px; text-indent: -18pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">因此，map 遍历 [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;]，相应 parseInt 接收参数如下</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">parseInt(&#39;1&#39;, 0); &nbsp;// 1</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">parseInt(&#39;2&#39;, 1); &nbsp;// NaN</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">parseInt(&#39;3&#39;, 2); &nbsp;// NaN</span></p><p style=\"margin-top: 5pt; margin-bottom: 5pt; margin-left: 28px; text-indent: -18pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">所以，parseInt 参数 radix 不合法，导致返回值为 NaN</span></p>"
  },
  {
    "title": "用原生JavaScript的实现过什么功能吗？",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">用原生JavaScript的实现过什么功能吗？</span></strong></p><p style=\"margin-top:5.0000pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">封装选择器、调用第三方API、设置和获取样式</span></p>"
  },
  {
    "title": "解释一下这段代码的意思吗？",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">解释一下这段代码的意思吗？</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; [].forEach.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">call</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">$$</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(</span><span style=\"font-family:Consolas;color:rgb(3,47,98);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&quot;*&quot;</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">),&nbsp;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">function</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(el){</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; el.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">style</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.outline&nbsp;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(3,47,98);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&quot;1px solid #&quot;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">+</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;(</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">~~</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">Math</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">random</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">()</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">*</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">1</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&lt;&lt;</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">24</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">))).</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">toString</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">16</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">);</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; })</span></p><p style=\"margin-top:5.0000pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">解释：获取页面所有的元素，遍历这些元素，为它们添加1像素随机颜色的轮廓(outline)</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;\">$$(sel)</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">&nbsp;// $$函数被许多现代浏览器命令行支持，等价于 document.querySelectorAll(sel)</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;\">[].forEach.call(NodeLists)</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">&nbsp;// 使用 call 函数将数组遍历函数 forEach 应到节点元素列表</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;\">el.style.outline = &quot;1px solid #333&quot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">&nbsp;// 样式 outline 位于盒模型之外，不影响元素布局位置</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;\">(1&lt;&lt;24)</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">&nbsp;// parseInt(&quot;ffffff&quot;, 16) == 16777215 == 2^24 - 1 // 1&lt;&lt;24 == 2^24 == 16777216</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;\">Math.random()*(1&lt;&lt;24)</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">&nbsp;// 表示一个位于 0 到 16777216 之间的随机浮点数</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;\">~~Math.random()*(1&lt;&lt;24)</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">&nbsp;//&nbsp;</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;\">~~</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">&nbsp;作用相当于 parseInt 取整</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;\">(~~(Math.random()*(1&lt;&lt;24))).toString(16)</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">&nbsp;// 转换为一个十六进制-</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">** JavaScript实现异步编程的方法？**</span></p><p style=\"margin-top:5.0000pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">回调函数</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">事件监听</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">发布/订阅</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">Promises对象</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">Async函数[ES7]</span></p>"
  },
  {
    "title": "web开发中会话跟踪的方法有哪些",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">web开发中会话跟踪的方法有哪些</span></strong></p><p style=\"margin-top:5.0000pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">cookie</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">session</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">url重写</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">隐藏input</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">ip地址</span></p>"
  },
  {
    "title": "JavaScript原型，原型链 ? 有什么特点？",
    "html": "<p><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">JavaScript原型，原型链 ? 有什么特点？</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&nbsp; &nbsp; &nbsp;&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">每个对象都会在其内部初始化一个属性，就是prototype(原型)，当我们访问一个对象的属性时</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&nbsp; &nbsp; &nbsp;&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">如果这个对象内部不存在这个属性，那么他就会去prototype里找这个属性，这个prototype又会有自己的prototype，于是就这样一直找下去，也就是我们平时所说的原型链的概念</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&nbsp; &nbsp; &nbsp;&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">关系：</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;\">instance.constructor.prototype = instance.__proto__</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&nbsp; &nbsp; &nbsp;&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">特点：</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o&nbsp;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">JavaScript对象是通过引用来传递的，我们创建的每个新对象实体中并没有一份属于自己的原型副本。当我们修改原型时，与之相关的对象也会继承这一改变。</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&nbsp; &nbsp; &nbsp;&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">当我们需要一个属性的时，Javascript引擎会先看当前对象中是否有这个属性， 如果没有的</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&nbsp; &nbsp; &nbsp;&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">就会查找他的Prototype对象是否有这个属性，如此递推下去，一直检索到 Object 内建对象</span></p>"
  },
  {
    "title": "javascript创建对象的几种方式？",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">javascript创建对象的几种方式？</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Segoe UI';color:rgb(106,115,125);font-style:normal;font-size:16px;\">javascript创建对象简单的说,无非就是使用内置对象或各种自定义对象，当然还可以用JSON；但写法有很多种，也能混合使用</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">对象字面量的方式</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">person={firstname:&quot;Mark&quot;,lastname:&quot;Yun&quot;,age:25,eyecolor:&quot;black&quot;};</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">用function来模拟无参的构造函数</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;function Person(){}</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; var person=new Person();//定义一个function，如果使用new&quot;实例化&quot;,该function可以看作是一个Class</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; person.name=&quot;Mark&quot;;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; person.age=&quot;25&quot;;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; person.work=function(){</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; alert(person.name+&quot; hello...&quot;);</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; }</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">person.work();</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">用function来模拟参构造函数来实现（用this关键字定义构造的上下文属性）</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">function Pet(name,age,hobby){</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp;this.name=name;//this作用域：当前对象</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp;this.age=age;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp;this.hobby=hobby;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp;this.eat=function(){</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert(&quot;我叫&quot;+this.name+&quot;,我喜欢&quot;+this.hobby+&quot;,是个程序员&quot;);</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp;}</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; }</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; var maidou =new Pet(&quot;麦兜&quot;,25,&quot;coding&quot;);//实例化、创建对象</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; maidou.eat();//调用eat方法</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">用工厂方式来创建（内置对象）</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">var wcDog =new Object();</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp;wcDog.name=&quot;旺财&quot;;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp;wcDog.age=3;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp;wcDog.work=function(){</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp;alert(&quot;我是&quot;+wcDog.name+&quot;,汪汪汪......&quot;);</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp;}</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp;wcDog.work();</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">用原型方式来创建</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">function Dog(){</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><br></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp;}</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp;Dog.prototype.name=&quot;旺财&quot;;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp;Dog.prototype.eat=function(){</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp;alert(this.name+&quot;是个吃货&quot;);</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp;}</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp;var wangcai =new Dog();</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp;wangcai.eat();</span></p><p style=\"margin-top: 5pt; margin-bottom: 5pt; margin-left: 28px; text-indent: -18pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">用混合方式来创建</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;function Car(name,price){</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; this.name=name;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; this.price=price;&nbsp;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; }</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp;Car.prototype.sell=function(){</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp;alert(&quot;我是&quot;+this.name+&quot;，我现在卖&quot;+this.price+&quot;万元&quot;);</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; }</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; var camry =new Car(&quot;凯美瑞&quot;,27);</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; camry.sell();&nbsp;</span></p>"
  },
  {
    "title": "谈谈this对象的理解(2)",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">谈谈This对象的理解</span></strong></p><p style=\"margin-top:5.0000pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">this总是指向函数的直接调用者（而非间接调用者）</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">如果有new关键字，this指向new出来的那个对象</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">在事件中，this指向触发这个事件的对象，特殊的是，IE中的attachEvent中的this总是指向全局对象Window</span></p>"
  },
  {
    "title": "null，undefined 的区别？",
    "html": "<p><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">null，undefined 的区别？</span></strong></p><p><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">undefined 表示不存在这个值。</span></p><p><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">undefined :是一个表示&quot;无&quot;的原始值或者说表示&quot;缺少值&quot;，就是此处应该有一个值，但是还没有定义。当尝试读取时会返回 undefined</span></p><p><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">例如变量被声明了，但没有赋值时，就等于undefined</span></p><p><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">null 表示一个对象被定义了，值为&ldquo;空值&rdquo;</span></p><p><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">null : 是一个对象(空对象, 没有任何属性和方法)</span></p><p><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">例如作为函数的参数，表示该函数的参数不是对象；</span></p><p><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">在验证null时，一定要使用　=== ，因为 == 无法分别 null 和　undefined</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:72.0000pt;text-indent:-18.0000pt;\"><br></p>"
  },
  {
    "title": "写一个通用的事件侦听器函数",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">写一个通用的事件侦听器函数</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;// event(事件)工具集，来源：github.com/markyun</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; markyun.Event = {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; // 页面加载完成后</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; readyEvent : function(fn) {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (fn==null) {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fn=document;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var oldonload = window.onload;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (typeof window.onload != &#39;function&#39;) {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; window.onload = fn;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; window.onload = function() {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; oldonload();</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fn();</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; },</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; // 视能力分别使用dom0||dom2||IE方式 来绑定事件</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; // 参数： 操作的元素,事件名称 ,事件处理程序</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; addEvent : function(element, type, handler) {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (element.addEventListener) {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //事件类型、需要执行的函数、是否捕捉</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; element.addEventListener(type, handler, false);</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else if (element.attachEvent) {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; element.attachEvent(&#39;on&#39; + type, function() {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; handler.call(element);</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; element[&#39;on&#39; + type] = handler;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; },</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; // 移除事件</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; removeEvent : function(element, type, handler) {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (element.removeEventListener) {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; element.removeEventListener(type, handler, false);</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else if (element.datachEvent) {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; element.detachEvent(&#39;on&#39; + type, handler);</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; element[&#39;on&#39; + type] = null;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; },</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; // 阻止事件 (主要是事件冒泡，因为IE不支持事件捕获)</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; stopPropagation : function(ev) {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (ev.stopPropagation) {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ev.stopPropagation();</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ev.cancelBubble = true;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; },</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; // 取消事件的默认行为</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; preventDefault : function(event) {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (event.preventDefault) {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; event.preventDefault();</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; event.returnValue = false;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; },</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; // 获取事件目标</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; getTarget : function(event) {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return event.target || event.srcElement;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; },</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; // 获取event对象的引用，取到事件的所有信息，确保随时能使用event；</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; getEvent : function(e) {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var ev = e || window.event;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (!ev) {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var c = this.getEvent.caller;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; while (c) {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ev = c.arguments[0];</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (ev &amp;&amp; Event == ev.constructor) {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; c = c.caller;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return ev;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; }</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; };</span></p>"
  },
  {
    "title": "事件是？IE与火狐的事件机制有什么区别？ 如何阻止冒泡？",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">事件是？IE与火狐的事件机制有什么区别？ 如何阻止冒泡？</span></strong></p><p style=\"margin-top:5.0000pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">我们在网页中的某个操作（有的操作对应多个事件）。例如：当我们点击一个按钮就会产生一个事件。是可以被 JavaScript 侦测到的行为</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">事件处理机制：IE是事件冒泡、Firefox同时支持两种事件模型，也就是：捕获型事件和冒泡型事件</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">ev.stopPropagation();（旧ie的方法 ev.cancelBubble = true;）</span></p>"
  },
  {
    "title": "什么是闭包（closure），为什么要用它？",
    "html": "<p><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">什么是闭包（closure），为什么要用它？</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&nbsp;&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">闭包是指有权访问另一个函数作用域中变量的函数，创建闭包的最常见的方式就是在一个函数内创建另一个函数，通过另一个函数访问这个函数的局部变量,利用闭包可以突破作用链域</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&nbsp;&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">闭包的特性：</span></p><p style=\"margin-top: 0pt; margin-bottom: 12pt; margin-left: 20px; text-indent: 0pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">函数内再嵌套函数</span></p><p style=\"margin-top: 0pt; margin-bottom: 12pt; margin-left: 20px; text-indent: 0pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">内部函数可以引用外层的参数和变量</span></p><p style=\"margin-top: 0pt; margin-bottom: 12pt; margin-left: 20px; text-indent: 0pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">参数和变量不会被垃圾回收机制回收</span></p>"
  },
  {
    "title": "javascript 代码中的\"use strict\";是什么意思 ? 使用它区别是什么？",
    "html": "<p><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">javascript 代码中的&quot;use strict&quot;;是什么意思 ? 使用它区别是什么？</span></strong></p><p style=\"margin-top: 5pt; margin-bottom: 5pt; margin-left: 28px; text-indent: -18pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">use strict是一种ECMAscript 5 添加的（严格）运行模式,这种模式使得 Javascript 在更严格的条件下运行,使JS编码更加规范化的模式,消除Javascript语法的一些不合理、不严谨之处，减少一些怪异行为</span></p>"
  },
  {
    "title": "如何判断一个对象是否属于某个类？",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">如何判断一个对象是否属于某个类？</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">// 使用instanceof （待完善）</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp;if(a instanceof Person){</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp;alert(&#39;yes&#39;);</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp;}</span></p>"
  },
  {
    "title": "new操作符具体干了什么呢?",
    "html": "<p><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">new操作符具体干了什么呢?</span></strong></p><p style=\"margin-top: 5pt; margin-bottom: 5pt; margin-left: 28px; text-indent: -18pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">创建一个空对象，并且 this 变量引用该对象，同时还继承了该函数的原型</span></p><p style=\"margin-top: 2.65pt; margin-bottom: 5pt; margin-left: 28px; text-indent: -18pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">属性和方法被加入到 this 引用的对象中</span></p><p style=\"margin-top: 2.65pt; margin-bottom: 5pt; margin-left: 28px; text-indent: -18pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">新创建的对象由 this 所引用，并且最后隐式的返回 this</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">var obj &nbsp;= {};</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">obj.__proto__ = Base.prototype;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">Base.call(obj);</span></p>"
  },
  {
    "title": "js延迟加载的方式有哪些？",
    "html": "<p><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">js延迟加载的方式有哪些？</span></strong></p><p><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">defer和async、动态创建DOM方式（用得最多）、按需异步载入js</span></p>"
  },
  {
    "title": "Ajax 是什么? 如何创建一个Ajax？",
    "html": "<p><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">Ajax 是什么? 如何创建一个Ajax？</span></strong></p><p><span style=\"font-family:'Segoe UI';color:rgb(106,115,125);font-style:normal;font-size:16px;\">ajax的全称：Asynchronous Javascript And XML</span></p><p><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">异步传输+js+xml</span></p><p><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">所谓异步，在这里简单地解释就是：向服务器发送请求的时候，我们不必等待结果，而是可以同时做其他的事情，等到有了结果它自己会根据设定进行后续操作，与此同时，页面是不会发生整页刷新的，提高了用户体验</span></p><p><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">创建XMLHttpRequest对象,也就是创建一个异步调用对象</span></p><p><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">建一个新的HTTP请求,并指定该HTTP请求的方法、URL及验证信息</span></p><p><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">设置响应HTTP请求状态变化的函数</span></p><p><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">发送HTTP请求</span></p><p><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">获取异步调用返回的数据</span></p><p><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">用JavaScript和DOM实现局部刷新</span></p>"
  },
  {
    "title": "同步和异步的区别?",
    "html": "<p><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">同步和异步的区别?</span></strong></p><p style=\"margin-top: 5pt; margin-bottom: 5pt; margin-left: 28px; text-indent: -18pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">同步：浏览器访问服务器请求，用户看得到页面刷新，重新发请求,等请求完，页面刷新，新内容出现，用户看到新内容,进行下一步操作</span></p><p style=\"margin-top: 2.65pt; margin-bottom: 5pt; margin-left: 28px; text-indent: -18pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">异步：浏览器访问服务器请求，用户正常操作，浏览器后端进行请求。等请求完，页面不刷新，新内容也会出现，用户看到新内容</span></p>"
  },
  {
    "title": "延迟加载JS的方式有哪些？",
    "html": "<p><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">延迟加载JS的方式有哪些？</span></strong></p><p><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">设置</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&lt;script&gt;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">属性 defer=&quot;defer&quot; （脚本将在页面完成解析时执行）</span></p><p><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">动态创建 script DOM：document.createElement(&#39;script&#39;);</span></p><p><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">XmlHttpRequest 脚本注入</span></p><p><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">延迟加载工具 LazyLoad</span></p>"
  },
  {
    "title": "documen.write和 innerHTML的区别",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">documen.write和 innerHTML的区别</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">document.write只能重绘整个页面</span></p><p><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">innerHTML可以重绘页面的一部分</span></p>"
  },
  {
    "title": "DOM操作——怎样添加、移除、移动、复制、创建和查找节点?",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">DOM操作&mdash;&mdash;怎样添加、移除、移动、复制、创建和查找节点?</span></strong></p><p style=\"margin-top: 5pt; margin-bottom: 5pt; margin-left: 28px; text-indent: -18pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">（1）创建新节点</span></p><p style=\"margin-top:5.0000pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">createDocumentFragment() //创建一个DOM片段</span></p><p style=\"margin-top:5.0000pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">createElement() //创建一个具体的元素</span></p><p style=\"margin-top:5.0000pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">createTextNode() //创建一个文本节点</span></p><p style=\"margin-top: 2.65pt; margin-bottom: 5pt; margin-left: 28px; text-indent: -18pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">（2）添加、移除、替换、插入</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">appendChild()</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">removeChild()</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">replaceChild()</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">insertBefore() //在已有的子节点前插入一个新的子节点</span></p><p style=\"margin-top: 2.65pt; margin-bottom: 5pt; margin-left: 28px; text-indent: -18pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">（3）查找</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">getElementsByTagName() //通过标签名称</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">getElementsByName() // 通过元素的Name属性的值(IE容错能力较强，会得到一个数组，其中包括id等于name值的)</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">getElementById() //通过元素Id，唯一性</span></p>"
  },
  {
    "title": "那些操作会造成内存泄漏？",
    "html": "<p><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">那些操作会造成内存泄漏？</span></strong></p><p><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">内存泄漏指任何对象在您不再拥有或需要它之后仍然存在</span></p><p><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">垃圾回收器定期扫描对象，并计算引用了每个对象的其他对象的数量。如果一个对象的引用数量为 0（没有其他对象引用过该对象），或对该对象的惟一引用是循环的，那么该对象的内存即可回收</span></p><p><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">setTimeout 的第一个参数使用字符串而非函数的话，会引发内存泄漏</span></p><p><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">闭包、控制台日志、循环（在两个对象彼此引用且彼此保留时，就会产生一个循环）</span></p>"
  },
  {
    "title": "渐进增强和优雅降级",
    "html": "<p><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">渐进增强和优雅降级</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">渐进增强 ：针对低版本浏览器进行构建页面，保证最基本的功能，然后再针对高级浏览器进行效果、交互等改进和追加功能达到更好的用户体验。</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">优雅降级 ：一开始就构建完整的功能，然后再针对低版本浏览器进行兼容</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:72.0000pt;text-indent:-18.0000pt;\"><br></p>"
  },
  {
    "title": "Javascript垃圾回收方法",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">Javascript垃圾回收方法</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">标记清除（mark and sweep）</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(106,115,125);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(106,115,125);font-style:normal;font-size:16px;\">这是JavaScript最常见的垃圾回收方式，当变量进入执行环境的时候，比如函数中声明一个变量，垃圾回收器将其标记为&ldquo;进入环境&rdquo;，当变量离开环境的时候（函数执行结束）将其标记为&ldquo;离开环境&rdquo;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(106,115,125);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(106,115,125);font-style:normal;font-size:16px;\">垃圾回收器会在运行的时候给存储在内存中的所有变量加上标记，然后去掉环境中的变量以及被环境中变量所引用的变量（闭包），在这些完成之后仍存在标记的就是要删除的变量了</span></p>"
  },
  {
    "title": "引用计数(reference counting)",
    "html": "<p><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">引用计数(reference counting)</span></strong></p><p><span style=\"font-family:'Segoe UI';color:rgb(106,115,125);font-style:normal;font-size:16px;\">在低版本IE中经常会出现内存泄露，很多时候就是因为其采用引用计数方式进行垃圾回收。引用计数的策略是跟踪记录每个值被使用的次数，当声明了一个 变量并将一个引用类型赋值给该变量的时候这个值的引用次数就加1，如果该变量的值变成了另外一个，则这个值得引用次数减1，当这个值的引用次数变为0的时 候，说明没有变量在使用，这个值没法被访问了，因此可以将其占用的空间回收，这样垃圾回收器会在运行的时候清理掉引用次数为0的值占用的空间</span></p>"
  },
  {
    "title": "js继承方式及其优缺点",
    "html": "<p><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">js继承方式及其优缺点</span></strong></p><p><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">原型链继承的缺点</span></p><p style=\"margin-left: 20px;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">一是字面量重写原型会中断关系，使用引用类型的原型，并且子类型还无法给超类型传递参数。</span></p><p><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">借用构造函数（类式继承）</span></p><p style=\"margin-left: 20px;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">借用构造函数虽然解决了刚才两种问题，但没有原型，则复用无从谈起。所以我们需要原型链+借用构造函数的模式，这种模式称为组合继承</span></p><p><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">组合式继承</span></p><p style=\"margin-left: 20px;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">组合式继承是比较常用的一种继承方法，其背后的思路是使用原型链实现对原型属性和方法的继承，而通过借用构造函数来实现对实例属性的继承。这样，既通过在原型上定义方法实现了函数复用，又保证每个实例都有它自己的属性。</span></p>"
  },
  {
    "title": "defer和async",
    "html": "<p><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">defer和async</span></strong></p><p><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">defer并行加载js文件，会按照页面上script标签的顺序执行async并行加载js文件，下载完成立即执行，不会按照页面上script标签的顺序执行</span></p>"
  },
  {
    "title": "用过哪些设计模式？",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">用过哪些设计模式？</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">工厂模式：</span></p><p style=\"margin-top: 0pt; margin-bottom: 12pt; margin-left: 20px; text-indent: 0pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">主要好处就是可以消除对象间的耦合，通过使用工程方法而不是new关键字。将所有实例化的代码集中在一个位置防止代码重复</span></p><p style=\"margin-top: 0pt; margin-bottom: 12pt; margin-left: 20px; text-indent: 0pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">工厂模式解决了重复实例化的问题 ，但还有一个问题,那就是识别问题，因为根本无法 搞清楚他们到底是哪个对象的实例</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">function createObject(name,age,profession){//集中实例化的函数var obj = new Object();</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; obj.name = name;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; obj.age = age;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; obj.profession = profession;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; obj.move = function () {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; return this.name + &#39; at &#39; + this.age + &#39; engaged in &#39; + this.profession;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; };</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; return obj;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">}</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">var test1 = createObject(&#39;trigkit4&#39;,22,&#39;programmer&#39;);//第一个实例var test2 = createObject(&#39;mike&#39;,25,&#39;engineer&#39;);//第二个实例</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">构造函数模式</span></p><p style=\"margin-top: 0pt; margin-bottom: 12pt; margin-left: 20px; text-indent: 0pt; padding: 0pt; background: rgb(246, 248, 250);\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">使用构造函数的方法 ，即解决了重复实例化的问题 ，又解决了对象识别的问题，该模式与工厂模式的不同之处在于</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">构造函数方法没有显示的创建对象 (new Object());</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">直接将属性和方法赋值给 this 对象;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">没有 renturn 语句</span></p>"
  },
  {
    "title": "说说你对闭包的理解",
    "html": "<p><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">说说你对闭包的理解</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">使用闭包主要是为了设计私有的方法和变量。闭包的优点是可以避免全局变量的污染，缺点是闭包会常驻内存，会增大内存使用量，使用不当很容易造成内存泄露。在js中，函数即闭包，只有函数才会产生作用域的概念</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">闭包有三个特性：</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';font-size:13px;\">o&nbsp;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">1.函数嵌套函数</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';font-size:13px;\">o&nbsp;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">2.函数内部可以引用外部的参数和变量</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';font-size:13px;\">o&nbsp;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">3.参数和变量不会被垃圾回收机制回收</span></p>"
  },
  {
    "title": "请解释一下 JavaScript 的同源策略",
    "html": "<p><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">请解释一下 JavaScript 的同源策略</span></strong></p><p><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">概念:同源策略是客户端脚本（尤其是Javascript）的重要的安全度量标准。它最早出自Netscape Navigator2.0，其目的是防止某个文档或脚本从多个不同源装载。这里的同源策略指的是：协议，域名，端口相同，同源策略是一种安全协议</span></p><p><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">指一段脚本只能读取来自同一来源的窗口和文档的属性</span></p>"
  },
  {
    "title": "为什么要有同源限制？",
    "html": "<p><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">为什么要有同源限制？</span></strong></p><p><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">我们举例说明：比如一个黑客程序，他利用Iframe把真正的银行登录页面嵌到他的页面上，当你使用真实的用户名，密码登录时，他的页面就可以通过Javascript读取到你的表单中input中的内容，这样用户名，密码就轻松到手了。</span></p><p><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">缺点</span></p><p style=\"margin-left: 20px;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">现在网站的JS都会进行压缩，一些文件用了严格模式，而另一些没有。这时这些本来是严格模式的文件，被 merge后，这个串就到了文件的中间，不仅没有指示严格模式，反而在压缩后浪费了字节</span></p>"
  },
  {
    "title": "实现一个函数clone，可以对JavaScript中的5种主要的数据类型（包括Number、String、Object、Array、Boolean）进行值复制",
    "html": "<p><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">实现一个函数clone，可以对JavaScript中的5种主要的数据类型（包括Number、String、Object、Array、Boolean）进行值复制</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">Object.prototype.clone = function(){</span></p><p style=\"margin-top: 0pt; margin-bottom: 12pt; margin-left: 40px; text-indent: 0pt; padding: 0pt; background: rgb(246, 248, 250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">var o = this.constructor === Array ? [] : {};</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><br></p><p style=\"margin-top: 0pt; margin-bottom: 12pt; text-indent: 0pt; padding: 0pt; background: rgb(246, 248, 250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for(var e in this){</span></p><p style=\"margin-top: 0pt; margin-bottom: 12pt; text-indent: 0pt; padding: 0pt; background: rgb(246, 248, 250);\"><br></p><p style=\"margin-top: 0pt; margin-bottom: 12pt; text-indent: 0pt; padding: 0pt; background: rgb(246, 248, 250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; o[e] = typeof this[e] === &quot;object&quot; ? this[e].clone() : this[e];</span></p><p style=\"margin-top: 0pt; margin-bottom: 12pt; text-indent: 0pt; padding: 0pt; background: rgb(246, 248, 250);\"><br></p><p style=\"margin-top: 0pt; margin-bottom: 12pt; text-indent: 0pt; padding: 0pt; background: rgb(246, 248, 250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><br></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return o;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; }</span></p>"
  },
  {
    "title": "说说严格模式的限制",
    "html": "<p><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">说说严格模式的限制</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">严格模式主要有以下限制：</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">变量必须声明后再使用</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">函数的参数不能有同名属性，否则报错</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">不能使用with语句</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">不能对只读属性赋值，否则报错</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">不能使用前缀0表示八进制数，否则报错</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">不能删除不可删除的属性，否则报错</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">不能删除变量delete prop，会报错，只能删除属性delete global[prop]</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">eval不会在它的外层作用域引入变量</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">eval和arguments不能被重新赋值</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">arguments不会自动反映函数参数的变化</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">不能使用arguments.callee</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">不能使用arguments.caller</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">禁止this指向全局对象</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">不能使用fn.caller和fn.arguments获取函数调用的堆栈</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">增加了保留字（比如protected、static和interface）</span></p>"
  },
  {
    "title": "如何删除一个cookie",
    "html": "<p><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">如何删除一个cookie</span></strong></p><p><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">将时间设为当前时间往前一点</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">var date = new Date();</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><br></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">date.setDate(date.getDate() - 1);//真正的删除</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">setDate()方法用于设置一个月的某一天</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">expires的设置</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; document.cookie = &#39;user=&#39;+ encodeURIComponent(&#39;name&#39;) &nbsp;+ &#39;;expires = &#39; + new Date(0)</span></p>"
  },
  {
    "title": "编写一个方法 求一个字符串的字节长度",
    "html": "<p><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">编写一个方法 求一个字符串的字节长度</span></strong></p><p><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">假设：一个英文字符占用一个字节，一个中文字符占用两个字节</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">function GetBytes(str){</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><br></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; var len = str.length;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><br></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; var bytes = len;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><br></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; for(var i=0; i&lt;len; i++){</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><br></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (str.charCodeAt(i) &gt; 255) bytes++;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><br></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; }</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><br></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; &nbsp; return bytes;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><br></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; }</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><br></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">alert(GetBytes(&quot;你好,as&quot;));</span></p>"
  },
  {
    "title": "请解释什么是事件代理",
    "html": "<p><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">请解释什么是事件代理</span></strong></p><p><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">事件代理（Event Delegation），又称之为事件委托。是 JavaScript 中常用绑定事件的常用技巧。顾名思义，&ldquo;事件代理&rdquo;即是把原本需要绑定的事件委托给父元素，让父元素担当事件监听的职务。事件代理的原理是DOM元素的事件冒泡。使用事件代理的好处是可以提高性能</span></p>"
  },
  {
    "title": "attribute和property的区别是什么？",
    "html": "<p><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">attribute和property的区别是什么？</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">attribute是dom元素在文档中作为html标签拥有的属性；</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">property就是dom元素在js中作为对象拥有的属性。</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">对于html的标准属性来说，attribute和property是同步的，是会自动更新的</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">但是对于自定义的属性来说，他们是不同步的</span></p>"
  },
  {
    "title": "页面编码和被请求的资源编码如果不一致如何处理？",
    "html": "<p><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">页面编码和被请求的资源编码如果不一致如何处理？</span></strong></p><p><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">后端响应头设置 charset</span></p><p><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">前端页面</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&lt;meta&gt;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">设置 charset</span></p>"
  },
  {
    "title": "把<script>放在</body>之前和之后有什么区别？浏览器会如何解析它们？",
    "html": "<p><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">把</span></strong><strong><span style=\"font-family:Consolas;color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:13px;\">&lt;script&gt;</span></strong><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">放在</span></strong><strong><span style=\"font-family:Consolas;color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:13px;\">&lt;/body&gt;</span></strong><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">之前和之后有什么区别？浏览器会如何解析它们？</span></strong></p><p><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">按照HTML标准，在</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&lt;/body&gt;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">结束后出现</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&lt;script&gt;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">或任何元素的开始标签，都是解析错误</span></p><p><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">虽然不符合HTML标准，但浏览器会自动容错，使实际效果与写在</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&lt;/body&gt;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">之前没有区别</span></p><p><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">浏览器的容错机制会忽略&lt;script&gt;之前的</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&lt;/body&gt;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">，视作</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&lt;script&gt;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">仍在 body 体内。省略</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&lt;/body&gt;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">和</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&lt;/html&gt;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">闭合标签符合HTML标准，服务器可以利用这一标准尽可能少输出内容</span></p>"
  },
  {
    "title": "JavaScript 中，调用函数有哪几种方式？",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">JavaScript 中，调用函数有哪几种方式？</span></strong></p><p style=\"margin-top:5.0000pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">方法调用模式 Foo.foo(arg1, arg2);</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">函数调用模式 foo(arg1, arg2);</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">构造器调用模式 (new Foo())(arg1, arg2);</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">call/applay调用模式 Foo.foo.call(that, arg1, arg2);</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:36.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">bind调用模式 Foo.foo.bind(that)(arg1, arg2)();</span></p>"
  },
  {
    "title": "简单实现 Function.bind 函数？列举一下JavaScript数组和对象有哪些原生方法？",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">简单实现 Function.bind 函数？</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">if</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;(</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">!</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">Function</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">prototype</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.bind) {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">Function</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">prototype</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">bind</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">function</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(that) {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">var</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;func&nbsp;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">this</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">, args&nbsp;</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">=</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">arguments</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">;</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">return</span><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">function</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">() {</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(215,58,73);font-style:normal;font-size:13px;background:rgb(246,248,250);\">return</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp;func.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">apply</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(that,&nbsp;</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">Array</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">prototype</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">.slice.</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">call</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(args,&nbsp;</span><span style=\"font-family:Consolas;color:rgb(0,92,197);font-style:normal;font-size:13px;background:rgb(246,248,250);\">1</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">));</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; &nbsp; }</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; &nbsp; }</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; }</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(106,115,125);font-style:normal;font-size:13px;background:rgb(246,248,250);\">// 只支持 bind 阶段的默认参数：</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; func.</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">bind</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(that, arg1, arg2)();</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><br></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(106,115,125);font-style:normal;font-size:13px;background:rgb(246,248,250);\">// 不支持以下调用阶段传入的参数：</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;padding:0pt 0pt 0pt 0pt ;background:rgb(246,248,250);\"><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">&nbsp; func.</span><span style=\"font-family:Consolas;color:rgb(111,66,193);font-style:normal;font-size:13px;background:rgb(246,248,250);\">bind</span><span style=\"font-family:Consolas;color:rgb(36,41,46);font-style:normal;font-size:13px;background:rgb(246,248,250);\">(that)(arg1, arg2);</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">** 列举一下JavaScript数组和对象有哪些原生方法？**</span></p><p style=\"margin-top:5.0000pt;margin-bottom:5.0000pt;margin-left:72.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">数组：</span></p><p style=\"margin-top:5.0000pt;margin-bottom:5.0000pt;margin-left:72.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">arr.concat(arr1, arr2, arrn);</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:72.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">arr.join(&quot;,&quot;);</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:72.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">arr.sort(func);</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:72.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">arr.pop();</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:72.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">arr.push(e1, e2, en);</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:72.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">arr.shift();</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:72.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">unshift(e1, e2, en);</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:72.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">arr.reverse();</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:72.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">arr.slice(start, end);</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:72.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">arr.splice(index, count, e1, e2, en);</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:72.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">arr.indexOf(el);</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:72.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">arr.includes(el); // ES6</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:72.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">对象：</span></p><p style=\"margin-top:5.0000pt;margin-bottom:5.0000pt;margin-left:72.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">object.hasOwnProperty(prop);</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:72.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">object.propertyIsEnumerable(prop);</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:72.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">object.valueOf();</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:72.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">object.toString();</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:72.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">object.toLocaleString();</span></p><p style=\"margin-top:2.6500pt;margin-bottom:5.0000pt;margin-left:72.0000pt;text-indent:-18.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">Class.prototype.isPropertyOf(object);</span></p>"
  },
  {
    "title": "Array.splice() 与 Array.splice() 的区别？",
    "html": "<p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">Array.splice() 与 Array.splice() 的区别？</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;&nbsp;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">slice -- &ldquo;读取&rdquo;数组指定的元素，不会对原数组进行修改</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o&nbsp;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">语法：arr.slice(start, end)</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o&nbsp;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">start 指定选取开始位置（含）</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o&nbsp;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">end 指定选取结束位置（不含）</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;&nbsp;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">splice</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o&nbsp;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">&ldquo;操作&rdquo;数组指定的元素，会修改原数组，返回被删除的元素</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o&nbsp;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">语法：arr.splice(index, count, [insert Elements])</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o&nbsp;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">index 是操作的起始位置</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o&nbsp;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">count = 0 插入元素，count &gt; 0 删除元素</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:'Courier New';color:rgb(36,41,46);font-style:normal;font-size:13px;\">o&nbsp;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">[insert Elements] 向数组新插入的元素</span></p>"
  },
  {
    "title": "JavaScript 对象生命周期的理解？",
    "html": "<p><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">JavaScript 对象生命周期的理解？</span></strong></p><p><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">当创建一个对象时，JavaScript 会自动为该对象分配适当的内存</span></p><p><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">垃圾回收器定期扫描对象，并计算引用了该对象的其他对象的数量</span></p><p><span style=\"font-family:Symbol;color:rgb(36,41,46);font-style:normal;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">如果被引用数量为 0，或惟一引用是循环的，那么该对象的内存即可回收</span></p>"
  },
  {
    "title": "哪些操作会造成内存泄漏？",
    "html": "<p><strong><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-weight:bold;font-style:normal;font-size:16px;\">哪些操作会造成内存泄漏？</span></strong></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">JavaScript 内存泄露指对象在不需要使用它时仍然存在，导致占用的内存不能使用或回收</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">未使用 var 声明的全局变量</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">闭包函数(Closures)</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">循环引用(两个对象相互引用)</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">控制台日志(console.log)</span></p><p style=\"margin-top:0.0000pt;margin-bottom:12.0000pt;margin-left:0.0000pt;text-indent:0.0000pt;\"><span style=\"font-family:Symbol;font-size:13px;\">&middot;</span><span style=\"font-family:'Segoe UI';color:rgb(36,41,46);font-style:normal;font-size:16px;\">移除存在绑定事件的DOM元素(IE)</span></p>"
  }
]
